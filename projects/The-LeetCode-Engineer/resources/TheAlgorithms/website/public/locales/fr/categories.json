{
    "activationfunctions": "Fonctions d'activation",
    "ahocorasick": "Algorithme d'Aho-Corasick",
    "arima": "ARIMA",
    "checksum": "Somme de contrôle",
    "ciphers": "Chiffrement",
    "classificationalgorithms": "Algorithmes de classification",
    "comparison": "Comparaison",
    "compression": "Compression",
    "conversions": "Conversions",
    "crypto": "Cryptographie",
    "datacompression": "Compression des données",
    "datamanipulation": "Manipulation des données",
    "datastructures": "Structures de données",
    "decomposition": "Décomposition",
    "developertools": "Outils de développement",
    "dictionary": "Dictionnaire",
    "digitalimageprocessing": "Traitement d'images numériques",
    "discretemathematics": "Mathématiques discrètes",
    "divisibilityofintegers": "Divisibilité des entiers",
    "dynamicprogramming": "Programmation dynamique",
    "edgedetection": "Détection des bords",
    "factorization": "Factorisation",
    "filetransfer": "Transfert de fichier",
    "filters": "Filtres",
    "fractals": "Fractales",
    "fundamentalsofpython": "Fondamentaux de Python",
    "games": "Jeux",
    "general": "Général",
    "geneticalgorithm": "Algorithme génétique",
    "geodesy": "Géodésie",
    "imageprocessing": "Traitement d'image",
    "linearalgebra": "Algèbre linéaire",
    "linkedlist": "Liste chaînée",
    "list": "Liste",
    "machinelearning": "Machine Learning",
    "math": "Mathématiques",
    "matrix": "Matrice",
    "naturallanguageprocessing": "Traitement du langage naturel",
    "navigation": "Navigation",
    "neuralnetwork": "Réseau neuronal",
    "nodes": "Nœuds",
    "numericalanalysis": "Analyse numérique",
    "numericalmethods": "Méthodes numériques",
    "operationsondatastructures": "Opérations sur les structures de données",
    "others": "Autres",
    "palindrome": "Palindrome",
    "parsing": "Analyse",
    "power": "Puissance",
    "probabilistic": "Probabilités",
    "probability": "Probabilité",
    "random": "Aléatoire",
    "robotics": "Robotique",
    "scheduling": "Planification",
    "scripts": "Scripts",
    "sequences": "Séquences",
    "series": "Séries",
    "sorts": "Tris",
    "textclassification": "Classification de texte",
    "timingfunctions": "Fonctions temporelles",
    "vectors": "Vecteurs",
    "webprogramming": "Programmation Web",
    "array": "Tableau",
    "audio": "Audio",
    "audiofilters": "Filtres audio",
    "cache": "Cache",
    "catalan": "Catalan",
    "clientserver": "Client serveur",
    "linearregression": "Regression linéaire",
    "password": "Mot de passe",
    "permutation": "Permutation",
    "problems": "Problèmes",
    "queues": "Files d'attente",
    "searches": "Recherches",
    "stacks": "Piles",
    "tree": "Arbre",
    "graphics": "Graphismes",
    "automaton": "Automatisation",
    "physics": "Physique",
    "greatestcommondivisor": "Plus Grand Commun Diviseur",
    "numeric": "Numérique",
    "basic": "Basic",
    "binarytree": "Arbre binaire",
    "booleanalgebra": "Algèbre booléen",
    "binary": "Binaire",
    "bitmanipulation": "Manipulation de bits",
    "blockchain": "Blockchain",
    "geometry": "Géométrie",
    "max": "Max",
    "min": "Min",
    "pascal": "Pascal",
    "strings": "Chaînes de caractère",
    "structure": "Structure",
    "graphs": "Graphes",
    "recursion": "Récurrence",
    "numbertheory": "Théorie des nombres",
    "recursive": "Récursivité",
    "statistics": "Statistiques",
    "codewars": "Codewars",
    "associativemining": "Règle d'association",
    "backtracking": "Retour arrière",
    "bags": "Bags",
    "basicsoftensorflow": "Notions de base de Tensorflow",
    "cosinesimilarity": "Similarité cosinus",
    "cpuschedulingalgorithms": "Algorithmes d'ordonnancement du CPU",
    "date": "Date",
    "a5": "A 5",
    "decisiontreeregressionwithkfoldcrossvalidation": "Régression par arbre de décision avec validation croisée K-Fold",
    "devutils": "Devutils",
    "diffiehellman": "Diffie-Hellman",
    "dithering": "Dither",
    "divideandconquer": "Diviser pour régner",
    "dynamic": "Dynamique",
    "dynamiccoinchange": "Problème de la monnaie dynamique",
    "dynamicarray": "Tableau dynamique",
    "exercism": "Exercism",
    "electronics": "Électronique",
    "encoders": "Encodeurs",
    "biginteger": "Grand Entier",
    "binaryheap": "Tas binaire",
    "buffers": "Mémoire tampon",
    "cll": "CLL",
    "cn": "Cn",
    "disjointset": "Ensemble disjoint",
    "computervision": "Vision par ordinateur",
    "coloring": "Coloration",
    "esolang": "Esolang",
    "ai": "IA",
    "bit": "Bit",
    "board": "Board",
    "cellularautomata": "Automate cellulaire",
    "complementaryfilter": "Filtre complémentaire",
    "distance": "Distance",
    "distances": "Distances",
    "entities": "Entités",
    "heap": "Amas",
    "heaps": "Amas",
    "pangram": "Pangramme",
    "nearestneighbor": "Plus proche voisin",
    "quantum": "Quantique",
    "stablemarriage": "Problème des mariages stables",
    "randomforestclassification": "Forêt d'arbres décisionnels",
    "stackwithsinglylinkedlist": "Pile avec liste chaînée simple",
    "hashing": "Hachage",
    "lstm": "Lstm (mémoire longue à court terme)",
    "modulararithmetic": "Arithmétique modulaire",
    "nearestneighbhorinterpolation": "Interpolation au plus proche voisin",
    "nested": "Emboîté",
    "rangequeries": "Requêtes de plage",
    "sdbmhash": "Sdbm Hash",
    "utils": "Utils",
    "financial": "Financier",
    "gcd": "PGCD",
    "hashset": "Ensemble de hachage",
    "hashtable": "Table de hachage",
    "histogramequalization": "Égalisation d'histogramme",
    "knapsack": "Problème du sac à dos",
    "levenshtein": "Levenshtein",
    "lsbbasedimagesteganography": "Stéganographie d'image basée sur le LSB",
    "segmenttrees": "Arbre de segments",
    "sieveoferatosthenes": "Crible d'Ératosthène",
    "sortedset": "Ensemble trié",
    "spanningtree": "Spanning Tree",
    "specializedstructure": "Structure spécialisée",
    "logisticregression": "Régression logistique",
    "manacher": "Manacher",
    "matrixexponentiation": "Exponentiation matricielle",
    "greedyalgorithms": "Algorithme glouton",
    "pi": "PI",
    "forecasting": "Prévision",
    "fuzzylogic": "Logique floue",
    "greedyapproach": "Approche gourmande",
    "minimumspanningtree": "Arbre de répartition minimal",
    "modular": "Modulaire",
    "morphologicaloperations": "Opérations morphologiques",
    "moserdebruijnsequence": "Suite de Bruijn",
    "prime": "Premier",
    "tries": "Tries",
    "gamemodel": "Modèle de jeu",
    "greedymethods": "Méthodes gourmandes",
    "leetcode": "Leetcode",
    "minimax": "Minimax",
    "minimaxplayground": "Terrain de jeu Minimax",
    "model": "Modèle",
    "numpy": "Numpy",
    "piecewise": "Régularité par morceaux",
    "player": "Joueur",
    "polynomials": "Polynômes",
    "processschedulingalgorithms": "Algorithmes d'ordonnancement des processus",
    "shufflers": "Mélangeurs",
    "sources": "Sources",
    "structures": "Structures",
    "prophet": "Prophète",
    "sum": "Somme",
    "test": "Test",
    "tests": "Tests",
    "trie": "Trie",
    "uint53": "Uint 53",
    "view": "Voir",
    "ipynbcheckpoints": "Points de contrôle .ipynb",
    "ganspytorchvanillalsdc": "GANs-PyTorch-Vanilla-LS-DC",
    "hashmap": "Carte de hachage",
    "longestincreasingsubsequence": "Plus longue sous-suite strictement croissante",
    "minimizationofpolynomialfunction": "Minimisation d'une fonction polynomiale",
    "patternsearch": "Recherche de motifs",
    "networkingflow": "Flux de réseaux",
    "polynomialminimization": "Minimisation polynomiale",
    "particleswarmoptimization": "Optimisation par essaims particulaires",
    "projectrosalind": "Project-Rosalind",
    "slidingwindow": "Fenêtre coulissante"
}
